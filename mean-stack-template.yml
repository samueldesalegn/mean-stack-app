AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation stack for deploying a MEAN stack application

Parameters:
  JwtPrivateKey:
    Type: String
  Port:
    Type: String

Resources:
  MyElasticBeanstalkServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: "elasticbeanstalk.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: "ElasticBeanstalkService"
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - "ec2:*"
                  - "elasticloadbalancing:*"
                  - "autoscaling:*"
                  - "cloudwatch:*"
                  - "s3:*"
                  - "dynamodb:*"
                  - "rds:*"
                  - "sns:*"
                  - "sqs:*"
                  - "cloudformation:*"
                  - "logs:*"
                Resource: "*"

  ElasticBeanstalkInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: "/"
      Roles:
        - Ref: MyElasticBeanstalkServiceRole

  ElasticBeanstalkApplication:
    Type: 'AWS::ElasticBeanstalk::Application'
    Properties:
      ApplicationName: !Sub "${AWS::StackName}-app"

  ElasticBeanstalkEnvironment:
    Type: 'AWS::ElasticBeanstalk::Environment'
    Properties:
      EnvironmentName: !Sub "${AWS::StackName}-env-${AWS::Region}-${AWS::AccountId}"
      ApplicationName: !Ref ElasticBeanstalkApplication
      SolutionStackName: "64bit Amazon Linux 2023 v6.1.6 running Node.js 18"
      OptionSettings:
        - Namespace: "aws:autoscaling:launchconfiguration"
          OptionName: "InstanceType"
          Value: "t2.micro"
        - Namespace: "aws:elasticbeanstalk:environment"
          OptionName: "EnvironmentType"
          Value: "SingleInstance"
        - Namespace: "aws:elasticbeanstalk:application:environment"
          OptionName: "JWT_PRIVATE_KEY"
          Value: !Ref JwtPrivateKey
        - Namespace: "aws:elasticbeanstalk:application:environment"
          OptionName: "PORT"
          Value: !Ref Port
      VersionLabel: !Ref ApplicationVersion

  ApplicationVersion:
    Type: 'AWS::ElasticBeanstalk::ApplicationVersion'
    Properties:
      ApplicationName: !Ref ElasticBeanstalkApplication
      SourceBundle:
        S3Bucket: "mean-stack-sam"
        S3Key: "mean-stack-app.zip"

  MedicationsTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: Medications
      AttributeDefinitions:
        - AttributeName: medicationId
          AttributeType: S
      KeySchema:
        - AttributeName: medicationId
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  UsersTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: Users
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
      KeySchema:
        - AttributeName: userId
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
